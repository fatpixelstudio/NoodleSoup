/* ==========================================================================
   Flexible page grid, with flexbox as fallback and CSS grid
   ========================================================================== */

/**
 * Based on CSS grid
 * - https://gridbyexample.com/
 * - https://css-tricks.com/snippets/css/complete-guide-grid/
 */

/**
 * Flexbox as a fallback
 */

.flex-grid {
	display: flex;
	flex-wrap: wrap;
	width: 100%;
}

.flex-grid__item {}

.flex-grid__main {
	width: 66%;
	flex-grow: 3;
}

.flex-grid__sidebar {
	width: 33%;
	flex-grow: 1;
}

/**
 * CSS grid usage
 */

/* We need to set the margin used on flex items to 0 as we have gaps in grid.  */
@supports (display: grid) {
	.flex-grid {
		display: grid;
		grid-gap: page-rhythm(3);
		margin: 0;
		grid-template-columns: 1fr;

		@include breakpoint(compact) {
			grid-template-columns: 1fr 1fr;
		}

		@include breakpoint(medium) {}

		@include breakpoint(large) {
		}
	}

	.flex-grid__main {
		width: 100%;
		flex-grow: unset;

		@include breakpoint(large) {
			grid-column: 1 / 9;
		}
	}

	.flex-grid__sidebar {
		width: 100%;
		flex-grow: unset;

		@include breakpoint(large) {
			grid-column: 9 / 13;
		}
	}

	.flex-grid__item {
		&--primary {
			grid-row: 1;
			grid-column: 1;
		}

		@include breakpoint(compact) {
			&--2col {
				grid-column: auto / span 2;
			}
			&--logo {
				grid-row: 4;
			}
		}

		@include breakpoint(large) {
			&--primary {
				// And this
				grid-row: auto;
				grid-column: auto;
			}
			&--logo {
				grid-row: auto;
			}

			&--2col {
				grid-column: auto / span 2;
			}

			&--3col {
				grid-column: auto / span 3;
			}

			&--4col {
				grid-column: auto / span 4;
			}

		}
	}

}


/**
 * Modernizr based fixes for non-supporting browsers
 */

.no-cssgrid {
	.flex-grid__item {
		@include breakpoint(large) {
			&--3col {
				width: 25%;
			}

			&--4col {
				width: 33%;
			}

			&--5col {
				width: 41%;
			}

			&--6col {
				width: 50%;
			}

			&--6col {
				width: 58%;
			}

			&--8col {
				width: 66%;
			}

			&--9col {
				width: 75%;
			}
		}
	}

}

/**
 * Home flex grid
 */

.home-flex-grid {
	display: flex;
	flex-wrap: wrap;
	width: 100%;
}

.home-flex-grid__main {
	width: 66%;
	flex-grow: 3;
}

.home-flex-grid__sidebar {
	width: 33%;
	flex-grow: 1;
}

@supports (display: grid) {
	.home-flex-grid {
		display: grid;
		grid-gap: rhythm(2);
		margin: 0;
		grid-template-columns: 1fr;

		@include breakpoint(compact) {}

		@include breakpoint(medium) {}

		@include breakpoint(large) {
			grid-template-columns: repeat(9, 1fr);
			grid-auto-rows: auto;
		}
	}

	.home-flex-grid__large {
		width: 100%;
		flex-grow: unset;

		@include breakpoint(large) {
			grid-column: 1 / 7;
		}
	}

	.home-flex-grid__small {
		width: 100%;
		flex-grow: unset;

		@include breakpoint(large) {
			grid-column: 7 / 10;
		}
	}
}

.no-cssgrid {
	.home-flex-grid__item {
		@include breakpoint(large) {}
	}
}
